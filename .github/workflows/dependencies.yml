name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # Update dependencies
  update-dependencies:
    runs-on: ubuntu-latest
    name: Update Dependencies

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip pip-tools

    - name: Update requirements
      run: |
        # Update requirements if using requirements files
        if [ -f "requirements.txt" ]; then
          pip-compile --upgrade requirements.in
        fi

    - name: Run tests with updated dependencies
      run: |
        pip install -e ".[dev]"
        pytest tests/ -v --tb=short -m "not slow and not gpu"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: automated dependency updates'
        body: |
          This PR contains automated dependency updates.

          Please review the changes and ensure all tests pass before merging.
        branch: chore/dependency-updates
        delete-branch: true

  # Security audit
  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]" safety

    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true

    - name: Run bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json

    - name: Comment security findings
      if: github.event_name == 'schedule'
      run: |
        # This would integrate with GitHub's security advisory API
        echo "Security scan completed. Check artifacts for detailed reports."
